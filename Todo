project: An attendance system for the company i am currently doing my youth service for, 
the project will be an executable pregame (exe file), 
Accepts two forms of input (staff ID or fingerprint), 
Logs attendance with timestamps.
Gives a friendly feedback message (“Have a nice day at work”, etc.).
Has an admin panel for registering staff, viewing attendance, and exporting CSV logs.



stack option: Python with PySide6 for UI, SQLite for Database

reasons/advantages: simple syntax, cross-platforms operational, fast development, 
more permissive licensing (LGPL), official Qt binding from The Qt Company

trade-offs: slower/larger files, additional setup for fingerprint integration

recomendation to who it may concern: use C# with .NET the only disadvantge is the program will only be 
compatable with windows


Dependencies confirmed:
- Python 3.12.3
- PySide6 6.10.0 (with PySide6_Addons, PySide6_Essentials, shiboken6)
- SQLite (built into Python)
- CSV (built into Python)


1. Project Structure:
      - main.py (application entry point)
      - ui/ (UI components and layouts)
      - database/ (SQLite models and operations)
      - models/ (data models for staff and attendance)
      - utils/ (helper functions and utilities)
      - hardware/ (fingerprint scanner integration - added later)

   2. Core Components:
      - Main attendance interface with ID input (primary focus)
      - Admin panel with staff registration and attendance viewing
      - SQLite database with tables for staff and attendance logs
      - CSV export functionality
      - Hardware abstraction layer (for future fingerprint integration)

   3. Development Phases:

      - Phase 1: Basic UI and database setup - COMPLETED
        - Create main window and basic navigation
        - Set up SQLite database with staff and attendance tables
        - Design basic UI layouts

      - Phase 2: Staff registration system - COMPLETED
        - Admin interface for adding staff members
        - Staff data validation and storage
        - Staff ID management

      - Phase 3: ID-based attendance functionality
        - Staff ID input interface - COMPLETED
        - Timestamp logging - COMPLETED
        - User feedback messages ("Have a nice day at work", etc.) - COMPLETED
        - Attendance record storage - COMPLETED

      - Phase 4: Admin panel features
        - Attendance record viewing - COMPLETED
        - Staff information management - COMPLETED
        - CSV export functionality - COMPLETED

      - Phase 5: Fingerprint integration (final phase)
        - Hardware setup and integration
        - Fingerprint scanning functionality
        - Biometric attendance logging

   4. Optimization Phases:
      - Changed App color Scheme to White & Blue to macth SEC's color Scheme
      - Modified color codes to eansure that tittle, header and background colors do not contrast
      - Improved Scheme/db table structure to fit the proper attendance app functionality (include time out and renamed postion to department)
      - adjusted table column sizing to be more reponsive.
      - changed late feedback to be output time in hours and mins 
      - improved staff record's column responsiveness  
      - alligned text to center on staff records and attendance tables 



  areas to improve on:

 add the sec building logo on the attendance page, when i hit enter it should log attendance (that way they are 2 options either the button or hitting enter)

 Add CRUD functionality to Staff Records page 

 protect the admin panel (need password to access it anytime you want to view it)
 
 improve how the Export data page looks 